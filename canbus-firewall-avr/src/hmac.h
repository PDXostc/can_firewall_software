/*
  Copyright (C) 2015, Jaguar Land Rover
  This program is licensed under the terms and conditions of the
  Mozilla Public License, version 2.0.  The full text of the 
  Mozilla Public License is at https://www.mozilla.org/MPL/2.0/
*/

/*
 * hmac.h
 *
 */ 


#ifndef HMAC_H_
#define HMAC_H_

#include <asf.h>

#define HMAC_KEY hmac_key

//standard size hmac key 40 characters
#define HMAC_KEY_LEN_BASE               40
#define HMAC_KEY_LEN                    HMAC_KEY_LEN_BASE

//spec defines a payload signature of 29 bytes
#define PAYLOAD_SIG_BUF_LEN_STAN        29
#define PAYLOAD_SIG_BUF_LEN             PAYLOAD_SIG_BUF_LEN_STAN
#define PAYLOAD_SIG_BUF                 payload_signature_buffer

//SHA-256 buffer is 32 bytes
#define HMAC_SHA_256_BUFFER_SIZE        32
#define HMAC_SIZE                       HMAC_SHA_256_BUFFER_SIZE

//hmac keys live in flash
#if defined (__GNUC__)
__attribute__((__section__(".userpage")))
#endif
extern unsigned char hmac_key[HMAC_KEY_LEN]
#if defined (__ICAVR32__)
@ "USERPAGE"
#endif
;

//buffer to be utilized when creating and checking a payload signature, clear when finished
extern unsigned char payload_signature_buffer[PAYLOAD_SIG_BUF_LEN];
extern const int payload_signature_buffer_len;

//buffer containing output of hmac generated by driver from payload signature
extern unsigned char hmac_sum[HMAC_SIZE];

//buffer loaded with hmac from incoming message, input to hash function,
//compared against final sum
extern unsigned char hmac_compare_buffer[HMAC_SIZE];


#endif /* HMAC_H_ */